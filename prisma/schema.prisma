// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vehiculo {
  id        Int      @id @default(autoincrement())
  referencia String   @unique
  marca      String
  modelo     String
  matricula  String   @unique
  bastidor   String   @unique
  kms        Int
  tipo       String   // "Compra", "Coche R", "Deposito Venta", "Inversor"
  estado     String   @default("disponible") // "disponible", "vendido", "reservado"
  orden      Int      @default(0)
  
  // Campos adicionales de Google Sheets
  fechaMatriculacion String?
  año               Int?
  itv               String?
  seguro            String?
  segundaLlave      String?
  documentacion     String?
  carpeta           String?
  master            String?
  hojasA            String?
  
  // Campos de inversor
  esCocheInversor   Boolean @default(false)
  inversorId        Int?
  inversor          Inversor? @relation(fields: [inversorId], references: [id])
  fechaCompra       DateTime?
  precioCompra      Float?
  gastosTransporte  Float?
  gastosTasas       Float?
  gastosMecanica    Float?
  gastosPintura     Float?
  gastosLimpieza    Float?
  gastosOtros       Float?
  precioPublicacion Float?
  precioVenta       Float?
  beneficioNeto     Float?
  notasInversor     String?
  fotoInversor      String?
  
  // Relaciones con Deals
  dealActivoId      Int? // ID del deal activo si está reservado/vendido
  deals             Deal[]
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Inversor {
  id              Int      @id @default(autoincrement())
  nombre          String
  email           String?
  telefono        String?
  capitalAportado Float    @default(0)
  capitalInvertido Float   @default(0)
  activo          Boolean  @default(true)
  
  vehiculos       Vehiculo[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Cliente {
  id               Int      @id @default(autoincrement())
  nombre           String
  apellidos        String
  email            String?
  telefono         String?
  fechaNacimiento  DateTime?
  direccion        String?
  ciudad           String?
  codigoPostal     String?
  provincia        String?
  dni              String?  @unique
  fechaRegistro    DateTime @default(now())
  
  // Campos de intereses del cliente
  vehiculosInteres     String? // JSON array de vehículos de interés
  presupuestoMaximo    Float?
  kilometrajeMaximo    Int?
  añoMinimo            Int?
  combustiblePreferido String? @default("cualquiera")
  cambioPreferido      String? @default("cualquiera")
  coloresDeseados      String? // JSON array
  necesidadesEspeciales String? // JSON array
  formaPagoPreferida   String? @default("cualquiera")
  
  // Campos adicionales
  comoLlego           String?
  fechaPrimerContacto DateTime?
  estado              String? @default("nuevo")
  prioridad           String? @default("media")
  proximoPaso         String?
  etiquetas           String? // JSON array
  notasAdicionales    String?
  observaciones       String?
  activo              Boolean  @default(true)
  
  notas            NotaCliente[]
  deals            Deal[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model NotaCliente {
  id        Int      @id @default(autoincrement())
  clienteId Int
  cliente   Cliente  @relation(fields: [clienteId], references: [id])
  fecha     DateTime @default(now())
  tipo      String   // "llamada", "email", "visita", "seguimiento"
  contenido String
  prioridad String   @default("media") // "alta", "media", "baja"
  completada Boolean @default(false)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Deal {
  id        Int      @id @default(autoincrement())
  numero    String   @unique // RES-2024-0001, CCV-2024-0001, etc.
  
  // Relaciones
  clienteId Int
  cliente   Cliente  @relation(fields: [clienteId], references: [id])
  vehiculoId Int
  vehiculo   Vehiculo @relation(fields: [vehiculoId], references: [id])
  
  // Estado del deal
  estado    String   @default("nuevo") // "nuevo", "reservado", "vendido", "facturado"
  resultado String? // "ganado", "perdido" (cuando estado = "cerrado")
  motivo    String? // motivo de pérdida o cierre
  
  // Información financiera
  importeTotal     Float?
  importeSena      Float?
  formaPagoSena    String? // "efectivo", "transferencia", "tarjeta"
  restoAPagar      Float?
  financiacion     Boolean @default(false)
  entidadFinanciera String?
  
  // Fechas importantes
  fechaCreacion    DateTime @default(now())
  fechaReservaDesde DateTime?
  fechaReservaExpira DateTime?
  fechaVentaFirmada DateTime?
  fechaFacturada   DateTime?
  fechaEntrega     DateTime?
  
  // Documentos (rutas de archivos)
  contratoReserva  String?
  contratoVenta    String?
  factura          String?
  recibos          String? // JSON array de rutas
  
  // Pagos registrados
  pagosSena        String? // JSON array: [{monto, fecha, metodo}]
  pagosResto       String? // JSON array: [{monto, fecha, metodo}]
  
  // Información adicional
  observaciones    String?
  responsableComercial String?
  
  // Cambio de nombre
  cambioNombreSolicitado    Boolean @default(false)
  documentacionRecibida      Boolean @default(false)
  clienteAvisado            Boolean @default(false)
  documentacionRetirada     Boolean @default(false)
  
  // Auditoría
  logHistorial     String? // JSON array de cambios
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
